/* Style file created by Connor
===============================
00: css variable
01: color
02: layout
03: typography
04: transition, animation, selector practice
05: Any exploration
===============================
*/

/** 00 css variable **/
:root {
    --body-color: hsl(0, 0%, 50%);
    --page-color: hsla(30, 32%, 88%, 0.8);
    --sidebar-color: hsl(0, 100%, 50%);
    --page-width: 30%;
    --page-top: 85vh;
    --bottom-bar-height: 10vh;
}

/** 01 color **/
body {
    background-color: var(--body-color);
}
#zen-intro {
    background-color: var(--page-color);
}
.sidebar {
    background-color: var(--sidebar-color);
    
}

/** h1 **/
h1 {
    color: hsl(200, 100%, 50%);
}
/** 02 layout **/
div.explanation, div.requirements {
    position: relative;
    width: var(--page-width);
    top: var(--page-top); 
}

div.explanation {
    left: 1vw;
}
div.requirements {
    left: 18vw;
}

.sidebar {
    position: fixed;
    left: 0;
    bottom: 0;
    right: 0;
    height: var(--bottom-bar-height);
}

div.extra1{
    position: fixed;
    left: 20%;
    width: 30%;
    height: 80vh;
}

/** 03 typography **/

/** 04 transition, animation, selector practice **/

section.intro h3 ~ p{
    text-transform: capitalize;
    opacity: 1;
    transition: all 3s ease-in-out;
}

section.intro h3:hover ~ p{
    opacity: 0;
    transform: scale(1.2);
}

@keyframes changeColor {
    from {background-image: linear-gradient(90deg, red, yellow, blue);}
    50% {background-image: linear-gradient(180deg, red, yellow, blue);}
    to {background-image: linear-gradient(270deg, red, yellow, blue);}
}

/** grid thing **/
div{
  background-color:  hsla(200,50%,70%,0.3);
}

.wrapper {
  background-color: white;
  display: grid;
  grid-template-columns: 100px  repeat(2, 1fr) 100px;
  grid-gap: 20px;
  grid-auto-rows: minmax(100px, auto);
}

.one{
  grid-column: 2/4;
  grid-row: 2/4;
}

.two{
  grid-column: 1/ 4;
  grid-row: 1/2;
}

.three{
  grid-column: 1/ 1;
  grid-row: 2/4;
}

.four{
  grid-column: 4/ 5;
  grid-row: 1/3;
}

.five{
  grid-column: 1/ 3;
  grid-row: 4/ 4;
}

.six{
  grid-column: 3/ 6;
  grid-row: 3/ 5;
}
